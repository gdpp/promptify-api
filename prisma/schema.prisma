// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  password    String
  name        String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  // prompts     Prompt[]  @relation("UserPrompts")
  // favorites   Favorite[]
  // votes       Vote[]
  // comments    Comment[]
}

// model Prompt {
//   id          String    @id @default(cuid())
//   title       String
//   description String
//   tags        String[]
//   author      User      @relation("UserPrompts", fields: [authorId], references: [id])
//   authorId    String
//   createdAt   DateTime  @default(now())
//   updatedAt   DateTime  @updatedAt
//   votes       Vote[]
//   comments    Comment[]
//   favorites   Favorite[]
// }

// model Vote {
//   id        String   @id @default(cuid())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String
//   prompt    Prompt   @relation(fields: [promptId], references: [id])
//   promptId  String
//   value     Int      // 1 for upvote
//   createdAt DateTime @default(now())

//   @@unique([userId, promptId]) // no duplicate votes
// }

// model Favorite {
//   id        String   @id @default(cuid())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String
//   prompt    Prompt   @relation(fields: [promptId], references: [id])
//   promptId  String
//   createdAt DateTime @default(now())

//   @@unique([userId, promptId])
// }

// model Comment {
//   id        String   @id @default(cuid())
//   user      User     @relation(fields: [userId], references: [id])
//   userId    String
//   prompt    Prompt   @relation(fields: [promptId], references: [id])
//   promptId  String
//   content   String
//   createdAt DateTime @default(now())
// }